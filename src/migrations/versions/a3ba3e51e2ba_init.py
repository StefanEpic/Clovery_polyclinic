"""init

Revision ID: a3ba3e51e2ba
Revises: 
Create Date: 2023-09-03 18:57:01.340724

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a3ba3e51e2ba'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('time_in', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coords_id'), 'coords', ['id'], unique=False)
    op.create_table('polyclinic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_polyclinic_id'), 'polyclinic', ['id'], unique=False)
    op.create_table('qualification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_qualification_id'), 'qualification', ['id'], unique=False)
    op.create_table('specialization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_specialization_id'), 'specialization', ['id'], unique=False)
    op.create_table('doctor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('second_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('specialization_id', sa.Integer(), nullable=False),
    sa.Column('qualification_id', sa.Integer(), nullable=False),
    sa.Column('polyclinic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['polyclinic_id'], ['polyclinic.id'], ),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualification.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['specialization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_doctor_id'), 'doctor', ['id'], unique=False)
    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('second_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('polyclinic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['polyclinic_id'], ['polyclinic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_patient_id'), 'patient', ['id'], unique=False)
    op.create_table('route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_point', sa.Integer(), nullable=False),
    sa.Column('finish_point', sa.Integer(), nullable=False),
    sa.Column('current_point', sa.Integer(), nullable=True),
    sa.Column('doctor', sa.Integer(), nullable=False),
    sa.Column('route_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['current_point'], ['coords.id'], ),
    sa.ForeignKeyConstraint(['doctor'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['finish_point'], ['coords.id'], ),
    sa.ForeignKeyConstraint(['start_point'], ['coords.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_route_doctor'), 'route', ['doctor'], unique=False)
    op.create_index(op.f('ix_route_id'), 'route', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_route_id'), table_name='route')
    op.drop_index(op.f('ix_route_doctor'), table_name='route')
    op.drop_table('route')
    op.drop_index(op.f('ix_patient_id'), table_name='patient')
    op.drop_table('patient')
    op.drop_index(op.f('ix_doctor_id'), table_name='doctor')
    op.drop_table('doctor')
    op.drop_index(op.f('ix_specialization_id'), table_name='specialization')
    op.drop_table('specialization')
    op.drop_index(op.f('ix_qualification_id'), table_name='qualification')
    op.drop_table('qualification')
    op.drop_index(op.f('ix_polyclinic_id'), table_name='polyclinic')
    op.drop_table('polyclinic')
    op.drop_index(op.f('ix_coords_id'), table_name='coords')
    op.drop_table('coords')
    # ### end Alembic commands ###
